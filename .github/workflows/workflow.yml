name: Main workflow

on:
  pull_request:
    branches:
      - master
    paths-ignore:
      - "**.md"
  push:
    branches:
      - master
    paths-ignore:
      - "**.md"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        ocaml-version:
          - 4.06.1
        node-version:
          - 14.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use OCaml ${{ matrix.ocaml-version }}
        uses: avsm/setup-ocaml@v1
        with:
          ocaml-version: ${{ matrix.ocaml-version }}

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Use latest esy
        run: npm install --global esy

      - name: Get opam root directory path
        id: opam-root-dir-path
        run: echo "::set-output name=dir::$(opam config var root)"

      # This step is required because esy's home directory doesn't exist at this point
      - name: Install esy packages
        run: esy install

      - name: Get esy cache directory path
        id: esy-cache-dir-path
        run: node .github/workflows/print_esy_cache.js

      - name: Restore opam cache
        id: cache-opam
        uses: actions/cache@v1
        with:
          path: ${{ steps.opam-root-dir-path.outputs.dir }}
          # opam cache is coupled to esy lock files, so both caches will be wiped whenever esy deps change
          key: opam-${{ matrix.os }}-${{ matrix.ocaml-version }}-${{ hashFiles('esy.lock/index.json') }}
          restore-keys: |
            opam-${{ matrix.os }}-${{ matrix.ocaml-version }}-

      - name: Restore esy cache
        uses: actions/cache@v1
        with:
          path: ${{ steps.esy-cache-dir-path.outputs.dir }}
          key: esy-${{ matrix.os }}-${{ hashFiles('esy.lock/index.json') }}
          restore-keys: esy-${{ matrix.os }}-

      - name: Install opam packages
        if: steps.cache-opam.outputs.cache-hit != 'true'
        run: |
          opam pin ocaml-lsp-server https://github.com/ocaml/ocaml-lsp.git --no-action
          opam install ocaml-lsp-server ocamlformat reason --yes

      - name: Build esy packages
        # Cleanup build cache in case dependencies have changed
        run: |
          esy build
          esy cleanup .

      - name: Install npm packages
        run: yarn --frozen-lockfile

      - name: Check formatting
        run: yarn fmt:check

      - name: Package extension
        run: yarn package

      - name: Test extension
        uses: GabrielBB/xvfb-action@v1.0
        with:
          run: yarn test

      - name: Publish extension
        if: success() && runner.os == 'Linux' && startsWith(github.ref, 'refs/tags/')
        run: yarn publish --pat ${{ secrets.VSCODE_MARKETPLACE_TOKEN }}

      - name: Upload extension installer to artifact
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v2
        with:
          name: ocaml-platform-${{ github.sha }}
          path: ocaml-platform-*.vsix
