{
  "name": "OCaml.mlx",
  "scopeName": "source.ocaml.mlx",
  "fileTypes": [
    "mlx"
  ],
  "patterns": [
    { "include": "#jsx" },
    { "include": "source.ocaml" }
  ],
  "repository": {
    "jsx": {
      "patterns": [
        { "include": "#jsx-head" },
        { "include": "#jsx-tail" }
      ]
    },
    "jsx-head": {
      "begin": "((<))(?=[_[:alpha:]])",
      "end": "((/>))|(?=</)",
      "beginCaptures": {
        "1": {
          "comment": "meta.separator"
        },
        "2": {
          "name": "punctuation.definition.tag.begin.js"
        }
      },
      "endCaptures": {
        "1": {
          "comment": "meta.separator"
        },
        "2": {
          "name": "punctuation.definition.tag.end.js"
        }
      },
      "patterns": [
        {
          "begin": "\\G",
          "end": "(?=[[:space:]/>])[[:space:]]*+",
          "comment": "meta.separator",
          "patterns": [
            {
              "comment": "Module name",
              "name": "entity.name.tag.inline.any.html",
              "match": "\\b[[:upper:]][[:word:]']*('|\\b)"
            },
            {
              "match": "\\b[[:lower:]][[:word:]]*\\b",
              "name": "entity.name.tag.inline.any.html"
            }
          ]
        },
        { "include": "#jsx-attributes" },
        { "include": "#jsx-body" }
      ]
    },
    "jsx-attributes": {
      "patterns": [
        { "include": "source.ocaml#comments" },
        { "include": "#jsx-property-name" },
        {
          "begin": "=(\\s*)",
          "end": "(?=\\s|/?>)",
          "beginCaptures": {
            "0": { "name": "keyword.operator.ocaml" }
          },
          "patterns": [
            { "include": "#jsx-expression" }
          ]
        }
      ]
    },
    "jsx-expression": {
      "patterns": [
        { "include": "source.ocaml#comments" },
        { "include": "source.ocaml#extensions" },
        { "include": "source.ocaml#attributes" },
        { "include": "source.ocaml#literals" },
        { "include": "source.ocaml#strings" },
        { "include": "source.ocaml#identifiers" },
        { "include": "#jsx" }
      ]
    },
    "jsx-property-name": {
      "match": "(?x)\n\\s*\n([_$[:alpha:]][-_$[:alnum:]]*)\n(?=\\s|=|/?>|/\\*|//)",
      "captures": {
        "1": {
          "name": "entity.other.attribute-name.namespace.js"
        },
        "2": {
          "name": "punctuation.separator.namespace.js"
        },
        "3": {
          "name": "entity.other.attribute-name.js"
        }
      }
    },
    "jsx-body": {
      "begin": "((>))",
      "end": "(?=</)",
      "beginCaptures": {
        "1": {
          "comment": "meta.separator"
        },
        "2": {
          "name": "punctuation.definition.tag.end.js"
        }
      },
      "patterns": [
        { "include": "#jsx-expression" }
      ]
    },
    "jsx-tail": {
      "begin": "\\G(/>)|(</)",
      "end": "(>)",
      "applyEndPatternLast": true,
      "comment": "meta.separator",
      "beginCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.js"
        },
        "2": {
          "name": "punctuation.definition.tag.begin.js"
        }
      },
      "endCaptures": {
        "1": {
          "name": "punctuation.definition.tag.end.js"
        }
      },
      "patterns": [
        {
          "comment": "Module name",
          "name": "entity.name.tag.inline.any.html",
          "match": "\\b[[:upper:]][[:word:]']*('|\\b)"
        },
        {
          "match": "\\b[[:lower:]][[:word:]]*\\b",
          "name": "entity.name.tag.inline.any.html"
        }
      ]
    }
  }
}
